# See https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
name: analyze

on:
  push:
    branches: ['main', 'maintenance/*']
    paths: ['.github/**', '.mvn/**', 'src/**', 'eclipse-formatter-config.xml', 'pom.xml']
  pull_request:
    branches: ['main', 'maintenance/*']
    paths: ['.github/**', '.mvn/**', 'src/**', 'eclipse-formatter-config.xml', 'pom.xml']
  schedule:
    - cron: '0 0 * * 6'

permissions:
  contents: 'read'
  pull-requests: 'write' # Required by SonarCloud to comment PRs
  security-events: 'write' # Required by all codeql-action workflows

jobs:
  sonar:
    # This workflow is only of value to the marcwrobel/jbanking repository and would always fail in forks
    if: github.repository == 'marcwrobel/jbanking'
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: 'actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c' # v3.3.0
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of sonar analysis

      - name: Set up Java
        uses: 'actions/setup-java@3f07048e3d294f56e9b90ac5ea2c6f74e9ad0f98' # v3.10.0
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Cache SonarQube packages
        uses: 'actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920' # v3.2.4
        with:
          path: '~/.sonar/cache'
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: 'actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920' # v3.2.4
        with:
          path: '~/.m2/repository'
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
        run: 'mvn --settings .mvn/settings.xml -B -P analyze verify sonar:sonar'

  codeql:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout repository
        uses: 'actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c' # v3.3.0
        with:
          # We must fetch at least the immediate parents so that if this is a pull request then we can check out the head.
          fetch-depth: 2

      - name: Initialize CodeQL
        uses: 'github/codeql-action/init@8775e868027fa230df8586bdf502bbd9b618a477' # v2.2.3
        with:
          languages: 'java'
          queries: 'security-and-quality'

      - name: Autobuild
        uses: 'github/codeql-action/autobuild@8775e868027fa230df8586bdf502bbd9b618a477' # v2.2.3

      - name: Perform CodeQL Analysis
        uses: 'github/codeql-action/analyze@8775e868027fa230df8586bdf502bbd9b618a477' # v2.2.3

  # See https://www.jetbrains.com/help/qodana/github.html#Usage
  codana:
    # This workflow is only of value to the marcwrobel/jbanking repository and would always fail in forks
    if: github.repository == 'marcwrobel/jbanking'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: 'actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c' # v3.3.0
        with:
          # required for checkout in case Qodana works in pull request mode
          fetch-depth: 0

      - name: Perform Qodana Scan
        uses: 'jetbrains/qodana-action@584b706efdfc1149cfb5234066b3bbf73d48249e' # v2022.3.3
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

      - name: Upload result
        uses: 'github/codeql-action/upload-sarif@8775e868027fa230df8586bdf502bbd9b618a477' # v2.2.3
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json
